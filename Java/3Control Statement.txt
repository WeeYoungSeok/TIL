Type 변수 = 값

Type은 값

Type

기본타입
- call by value 값을 저장
wrapper로 감싸서 참조로 바꿈 박싱

전수형 -byte , short, int, long
문자형 -char
논리형 -boolean


참조타입
- 모든 오브젝트에 상속 받음 call by reference

기본타입 처럼쓰는 String


자바 클래스의 기능 Method
- 명령문들의 집합 (해당 명령문들을 다 수행한 기능=메소드)

리턴타입
- 명령문들 전부 수행뒤에 값이 전달되는 타입

연산자 우선표기 외우기!!

논스태틱에서 스태틱으로 접근은 가능( 비추 )
스태틱에서 논스태틱으로 접근은 불가능



마린 2마리가 있으면 체력(논스태틱) - 체력은 저글링에게 맞으면 깍이듯이 변동이됨
논스태틱은 하나 하나에 배정이 가능(마린이라는 객체 각 각에 적용됨)

마린 2마리가 있으면 공격력(스태틱) - 공격력은 마린 전체가 똑같음
공격력은 클래스에 고정수치이고(마린이라는 객체 전체에 적용됨)

제어문
-조건문 : if,if ~else if,if ~else,if ~else if ~ else

-반복문

	// if는 순차적으로 모든 코드를 읽어드린다.
		// swtich는 해당 case로 jumping 하기 때문에
		// compiler가 작업하기 편하다




-Type

	=기본 타입 : 값 자체를 저장 (call by Value)
		-정수형: byte(1),short(2),int(4){기본형},long(8)-L
		-실수형: float(4)-F, double(8)(-D)
		-문자형: char(2)
		-논리형: boolean(1)

=> Wrapper class(기본 타입을 참조타입으로)
=> 형변환 -명시적(큰 -> 작은){큰것을 작은거에 넣으려고하니깐 명시해줘야함) / 묵시적(작은 -> 큰)


+문자열 : String
= 참조타입 : 저장된 값의 주소값 (call by Reference)
		(Object를 상속받는)모든 class


-Method : 기능, 명령문들의 집함

접근제한자 메모리영역 리턴타입 매소드명(파라미터){
(명령문)
}
접근제한자 - public protected (default) private
메모리영역 - static/non-static
리턴타입 - void / method를 호출하면 반환해주는 값으 type
파라미터 - 메소드 외보에서 전달된 값(argument)을 메소드 내부에서 사용하기 위한 변수

Operator(연산자 우선순위
증강연산자- 변수++,++변수,--변수,변수--
삼항연산자- (조건)? 참:거짓;


-제어문
=조건문
if (조건) {
	명령; //해당조건이 참일때

}else if(조건){
	명령; //해당조건이 참일때
}else{
	명령; //해당조건이 전부 거짓일때
}

//  식/값의 타입은 정수형,문자형,문자열 3가지 형태만 들어갈수있음 실수형x
switch(식/값){
	case 값:
		명령
		break; // 밑의 케이스가 더이상 나오게 하기 싫을때
	case 값:

	case 값:

	case 값:

	case 값:

	case 값:
		default: //케이스가 전부없을때 실행
		명령;


=반복문

while

for

