Class 

Object Oriented Programming : 기능별로 객체를 나눈다

추상화 : 여러 객체들을 하나의 추상적인 큰 개념으로 묶는다
ex) ( 버스 세단 트럭 -> 모두 차이다 차라는 큰 개념의 추상으로 묶어 놓은것)
	(바퀴 4개 기어1개 핸들1개 이런식으로 묶는것)
	(하나의 추상적인 것에 공통적인 것을 부여)

캡슐화 : 객체의 기능을 사용만 한다.(코드는 온닉)
ex) (String tocharArray() 내부적인 코드는 모르지만)
	(문자열을 캐릭터 배열로 바꿔준다) - 기능만 사용

상속 : 상위 객체를 하위 객체가 물려받난다.
ex) (동물이라는 상위 객체를 곰에게 부여)
	(다리가 4개라는 기능을 곰에게 부여)


다형성 : 같은 형태로 다른 행위를 한다.
ex) (동물 고양이 동물 멍멍이 둘다 동물인데)
	(같은 타입으로 가진 형태인데 각각 다른 일을 할 수 있음)

객체 지향 프로그램 : 객체들을 가지고 만들자


해당 기능들이 누구한테 있느냐로 나눈다 (class) - 역할에 따라

Java : OOP

배열 = 참조타입

메모리

프로그램을 실행하면 클래스들이 가장먼저 맨위에서 실행되어있음(종료될때까지)

-객체를 생성할 때 부모객체를 먼저 생성
-부모의 메소드가 먼저 생서되고 자식의 메소드가 생성
-생성된 주소는 부모의 주소
-메모리에 공개되어 있는 메소드만 사용 가능!!(중요)


자바 가상 머신 실행시 윈도우가 메모리를 줌
- 그 메모리를 3칸으로 나눔 
		static area 메소드들 클래스들이 있음
		stack area 변수가 저장됨
		heap area 값이 저장됨(리터럴 객체)
		메모리 첫칸에 클래스 두번째칸에 변수 세번째칸에 값 생각하면 됨
ex) static area - Animal,Cat,Dog 클래스 들이 가장 처음에 올라감
	stak area - dog,cat (변수 또는 연산자)
	heap area - new Dog();
	dog.bark();는 부모를 통해서 자식 클래스의 메소드를 불러옴(override 되어 있을경우)



클래스

new는 객체를 생성

ctrl + shift + s : 전체 저장



abstrat class(추상클래스) 는 자식이 반드시 구현해야하는 메소드와 자신이 반드시 만들어야하는
메소드가 항상 같이 있다
(확장하고 싶을때 사용)

interface class 는 무조건 다 추상 메소드 (가이드 해주고 싶을떄) (클래스 간의 결합도를 낮출때)



하위클래스와 상위클래스 간의 확장 : extends (부모와 자식이 같으면)
- 다중 상속 불가능 자식: this / 부모: super ★중요

클래스와 인터페이스 간의 확장 : implements (부모와 자식이 다르면)
- 다중상속 가능, 다형성

인터페이스와 인터페이스 간의 확장 : extends
- 다중상속 가능

부모의 타입으로 자식 생성
Parent p = new Child();

부모의 이름으로 자식 대입
Child c = new Child();
Parent p = c;

부모의 메서드를 통해 자식 메서드 호출


overloading
-전제조건 : 내 클래스 내에서만 작동
-동일 기능의 메서드이지만, 파라미터가 다를 때(개수, 타입 등)
-리턴 타입도 다를 수 있다.(이름으 같아야함)

override
-전제조건 : 상속(is a 관계) implements extends 에서 작동
-부모의 메서드를 자식이 변경 또는 확장
-동일 이름, 동일 파라미터, 동일 리턴타입

abstract

추상 클래스 : 하나 이상의 추상 메소드를 가진 클래스
- new 사용 불가
- 상속 강요(상속받은 곳에서 반드시 구현해야 한다.)
- 클래스 내에 abstract method가 한 개 이상 있으면
	반드시 abstract class가 되어야한다
- 반드시 상속을 통해서 사용해야 할 클래스의 경우 abstract Class로 선언을 한다
	ex) 전자정부프레임웤(eGov) 의 eGvoAbstract Class 등

interface

인터페이스 : 모든 메소드가 추상 메소드
- 변수는 자동으로 상수화
- private,protected 사용 불가 (public 도는 default)
- 선언만 한다 : 바디({}) 를 붙이지 않는다. (메서드 이름 나열)
