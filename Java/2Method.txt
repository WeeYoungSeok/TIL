call by value 호출하면 값이나오는 것 기본타입
-정수(비트 바이트 인트 롱) 실수(플롯(4) 더블(8)) 문자(캐릭터) 논리형(

call by 레퍼런스 참조 타입
-문자형 (스트링 (기본타입처럼사용)


레퍼클래스로 감싸는이유 기본타입은 값을 저장하는것 밖에못해서 기능을 사용하기위해
 레퍼 클래스로 감싼다 (기본타입 -> 참조타입)


method란

어떤 작업을 수행하기 위한 명령뭉들의 집합 (기능)
-ex 핫초코 만들때 물을 붓는다 핫초코 가루를 넣는다 젓는다 등을 합쳐놓은것들

무언가 입력한걸 처리해서 출력해줌
하나의 이름으로 여러 개의 명령을 일과처리 하는 작은 모듈
funcion

메소드 선언방법

접근제한자 메모리영억 리턴타입 메소드명(파라미터){
(명령문)
}

클래스=설계도

클래스안에있는 main 메소드
그 메인 밑에 쓰는것들이 명령문들의 집합

접근제한자 
public(어디서나 접근 참조 가능)
protected(상속일 경우엔 상속된 곳에서 상속이 아닌경우 같은 패키지내에서)
(default)(같은 패키지 내에서 접근 참조 가능)
private(현재 클래스 내에서만 접근 참조가능)


메모리 영역

static : 클래스.매소드로 바로호출가능
non static : 클래스 변수 = new 클래스();
		변수.호출할매소드(); 로 호출가능 자세한 내용은 나중에

다이어그램에서 s붙으면 static 안붙으면 nonstatic

매소드1 안에 매소드2 안에 매소드3이있는경우
매소드3을 먼저 처리하고나서 그 결과값이 매소드2의 파라미터 아규먼트가 넘어가게 된다
또 매소드2를 처리하고나서 그 결과값이 매소드1의 파라미터 아규먼트로 넘어가게 된다

매소드를 호출(매소드안에서 전부 기능을하고 난뒤 return값)하여 변환해주는 값의 타입 - 리턴타입
리턴해줄 변환값이 없을땐 void

메소드 외부에서 전달된 값을 받아서 매소드 내부에서 사용하는 변수 - 파라미터
매소드 외부에서 전달되는 값 - 아규먼트

컨트롤 + 쉬프트 + 에프 누르면 정리됨

syso 쓰고 컨트롤 스페이스바 = System.out.println(); 나옴 개꿀팁

main 쓰고 컨트롤 스페이스바 엔터하면 = public static void main(String[] args)
